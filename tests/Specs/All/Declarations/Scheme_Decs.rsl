scheme Scheme_Decs =
    class
        type
            T1 == x1 | x2 | x3,
            T2 = Int
        
        value
            x : Int,
            y : Int = 1,
            f : Int -> Int
            f(x) is x,
            f1 : Int >< Int -> Int
            f1(x, y) is x + y,
            z[t1: T1] : Int,
            w[t1: T1, t2: T1] : Int
        
        axiom
            x = 2,
            [zs] all x : T1 :- z[.x.] = 1,
            [ws] all x, y : T1 :- w[.x, y.] = 2

        transition_system [TS]
            variable
                x : Int,
                z[t1: T1] : Int,
                w[t1: T1, t2: T1] : Int
            
            init_constraint
                x = 4,
                all x : T1 :- z[.x.] = 1,
                all x, y : T1 :- w[.x, y.] = 2

            transition_rules
                true ==> x' = 1
            
        end
        
    end